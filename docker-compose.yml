version: '3.9'

networks:
  monitor-net:
    driver: bridge

volumes:
    db_data: {}
    prometheus_data: {}
    grafana_data: {}

services:
  db:
    container_name: postgres_db
    image: postgres:latest
    volumes:
      - db_data:/var/lib/postgresql/data/
    environment:
      TZ: Europe/London
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    expose:
      - 5432
    networks:
      - monitor-net
    restart: always

  rest-with-spring-boot-and-java-erudio:
    container_name: rest-api
    image: renanrfs/rest-with-spring-boot-and-java-erudio:latest
    build: ./
    working_dir: /rest-with-spring-boot-and-java-erudio
    environment:
      TZ: Europe/London
      SPRING.DATASOURCE.URL: jdbc:postgresql://db:5432/postgres
      SPRING.DATASOURCE.USERNAME: postgres
      SPRING.DATASOURCE.PASSWORD: postgres
    ports:
      - "80:80"
    command:
      - mvn spring-boot:run
    networks:
      - monitor-net
    depends_on:
      - db
    restart: always


  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/etc/prometheus/console_libraries'
#      - '--web.console.templates=/etc/prometheus/consoles'
#      - '--storage.tsdb.retention=200h'
#      - '--web.enable-lifecycle'
#    restart: unless-stopped
    expose:
      - 9090
    ports:
      - "9090:9090"
    networks:
      - monitor-net

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
#      - ./grafana/datasources:/etc/grafana/datasources
#      - ./grafana/dashboards:/etc/grafana/dashboards
#      - ./grafana/setup.sh:/setup.sh
#    entrypoint: /setup.sh
#    environment:
#      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
#      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
#      - GF_USERS_ALLOW_SIGN_UP=false
#    restart: unless-stopped
    expose:
      - 3000
    ports:
      - "3000:3000"
    networks:
      - monitor-net

  # nodeexporter:
  #   image: prom/node-exporter:latest
  #   container_name: nodeexporter
  #   user: root
  #   privileged: true
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
  #   restart: unless-stopped
  #   expose:
  #     - 9100
  #   networks:
  #     - monitor-net
  
#  alertmanager:
#   image: prom/alertmanager
#   container_name: alertmanager
#   volumes:
#     - ./alertmanager/:/etc/alertmanager/
#   command:
#     - '--config.file=/etc/alertmanager/config-email.yml'
#     - '--storage.path=/alertmanager'
#     - '--web.listen-address=0.0.0.0:9093'
#   restart: unless-stopped
#   ports:
#     - "9093:9093"
#   networks:
#     - monitor-net

#  blackbox-exporter:
#   image: prom/blackbox-exporter
#   container_name: blackbox
#   restart: unless-stopped
#   ports:
#     - "9115:9115"
#   networks:
#     - monitor-net

#  httpd:
#    image: httpd
#    ports:
#     - "5000:80"
#    container_name: "httpd"
#    networks:
#     - monitor-net
#
#  nginx:
#    image: nginx
#    ports:
#     - "5001:80"
#    container_name: "nginx"
#    networks:
#     - monitor-net
